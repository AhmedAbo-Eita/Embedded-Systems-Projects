
First_Porject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000026a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002be  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002f0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  0000032c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000650  00000000  00000000  00000374  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  000009c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002bb  00000000  00000000  00000f66  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000058  00000000  00000000  00001224  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000317  00000000  00000000  0000127c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001a0  00000000  00000000  00001593  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001733  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 28 01 	call	0x250	; 0x250 <main>
  64:	0c 94 33 01 	jmp	0x266	; 0x266 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_init>:
#include "DIO.h"
#include "../Utilities/type.h"

void DIO_init(uint8_t portNumber,uint8_t pinNumber,uint8_t direction)
{
	switch(portNumber)
  6c:	82 34       	cpi	r24, 0x42	; 66
  6e:	31 f1       	breq	.+76     	; 0xbc <DIO_init+0x50>
  70:	18 f4       	brcc	.+6      	; 0x78 <DIO_init+0xc>
  72:	81 34       	cpi	r24, 0x41	; 65
  74:	39 f0       	breq	.+14     	; 0x84 <DIO_init+0x18>
  76:	08 95       	ret
  78:	83 34       	cpi	r24, 0x43	; 67
  7a:	e1 f1       	breq	.+120    	; 0xf4 <DIO_init+0x88>
  7c:	84 34       	cpi	r24, 0x44	; 68
  7e:	09 f4       	brne	.+2      	; 0x82 <DIO_init+0x16>
  80:	54 c0       	rjmp	.+168    	; 0x12a <DIO_init+0xbe>
  82:	08 95       	ret
	{
		//case of port A
		case PORT_A:
		if (direction == OUT)
  84:	41 11       	cpse	r20, r1
  86:	0b c0       	rjmp	.+22     	; 0x9e <DIO_init+0x32>
		{
			DDRA |= (1<<pinNumber);
  88:	2a b3       	in	r18, 0x1a	; 26
  8a:	81 e0       	ldi	r24, 0x01	; 1
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	02 c0       	rjmp	.+4      	; 0x94 <DIO_init+0x28>
  90:	88 0f       	add	r24, r24
  92:	99 1f       	adc	r25, r25
  94:	6a 95       	dec	r22
  96:	e2 f7       	brpl	.-8      	; 0x90 <DIO_init+0x24>
  98:	82 2b       	or	r24, r18
  9a:	8a bb       	out	0x1a, r24	; 26
  9c:	08 95       	ret
		}
		else if(direction == IN)
  9e:	41 30       	cpi	r20, 0x01	; 1
  a0:	09 f0       	breq	.+2      	; 0xa4 <DIO_init+0x38>
  a2:	5d c0       	rjmp	.+186    	; 0x15e <DIO_init+0xf2>
		{
			DDRA &= ~(1<<pinNumber);
  a4:	2a b3       	in	r18, 0x1a	; 26
  a6:	81 e0       	ldi	r24, 0x01	; 1
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	02 c0       	rjmp	.+4      	; 0xb0 <DIO_init+0x44>
  ac:	88 0f       	add	r24, r24
  ae:	99 1f       	adc	r25, r25
  b0:	6a 95       	dec	r22
  b2:	e2 f7       	brpl	.-8      	; 0xac <DIO_init+0x40>
  b4:	80 95       	com	r24
  b6:	82 23       	and	r24, r18
  b8:	8a bb       	out	0x1a, r24	; 26
  ba:	08 95       	ret
		}
		break;
		
		//case of port B
		case PORT_B:
		if (direction == OUT)
  bc:	41 11       	cpse	r20, r1
  be:	0b c0       	rjmp	.+22     	; 0xd6 <DIO_init+0x6a>
		{
			DDRB |= (1<<pinNumber);
  c0:	27 b3       	in	r18, 0x17	; 23
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	02 c0       	rjmp	.+4      	; 0xcc <DIO_init+0x60>
  c8:	88 0f       	add	r24, r24
  ca:	99 1f       	adc	r25, r25
  cc:	6a 95       	dec	r22
  ce:	e2 f7       	brpl	.-8      	; 0xc8 <DIO_init+0x5c>
  d0:	82 2b       	or	r24, r18
  d2:	87 bb       	out	0x17, r24	; 23
  d4:	08 95       	ret
		}
		else if(direction == IN)
  d6:	41 30       	cpi	r20, 0x01	; 1
  d8:	09 f0       	breq	.+2      	; 0xdc <DIO_init+0x70>
  da:	41 c0       	rjmp	.+130    	; 0x15e <DIO_init+0xf2>
		{
			DDRB &= ~(1<<pinNumber);
  dc:	27 b3       	in	r18, 0x17	; 23
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <DIO_init+0x7c>
  e4:	88 0f       	add	r24, r24
  e6:	99 1f       	adc	r25, r25
  e8:	6a 95       	dec	r22
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <DIO_init+0x78>
  ec:	80 95       	com	r24
  ee:	82 23       	and	r24, r18
  f0:	87 bb       	out	0x17, r24	; 23
  f2:	08 95       	ret
		}
		break;
		
		//case of port C
		case PORT_C:
		if (direction == OUT)
  f4:	41 11       	cpse	r20, r1
  f6:	0b c0       	rjmp	.+22     	; 0x10e <DIO_init+0xa2>
		{
			DDRC |= (1<<pinNumber);
  f8:	24 b3       	in	r18, 0x14	; 20
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	02 c0       	rjmp	.+4      	; 0x104 <DIO_init+0x98>
 100:	88 0f       	add	r24, r24
 102:	99 1f       	adc	r25, r25
 104:	6a 95       	dec	r22
 106:	e2 f7       	brpl	.-8      	; 0x100 <DIO_init+0x94>
 108:	82 2b       	or	r24, r18
 10a:	84 bb       	out	0x14, r24	; 20
 10c:	08 95       	ret
		}
		else if(direction == IN)
 10e:	41 30       	cpi	r20, 0x01	; 1
 110:	31 f5       	brne	.+76     	; 0x15e <DIO_init+0xf2>
		{
			DDRC &= ~(1<<pinNumber);
 112:	24 b3       	in	r18, 0x14	; 20
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	02 c0       	rjmp	.+4      	; 0x11e <DIO_init+0xb2>
 11a:	88 0f       	add	r24, r24
 11c:	99 1f       	adc	r25, r25
 11e:	6a 95       	dec	r22
 120:	e2 f7       	brpl	.-8      	; 0x11a <DIO_init+0xae>
 122:	80 95       	com	r24
 124:	82 23       	and	r24, r18
 126:	84 bb       	out	0x14, r24	; 20
 128:	08 95       	ret
		}
		break;
		
		//case of port D
		case PORT_D:
		if (direction == OUT)
 12a:	41 11       	cpse	r20, r1
 12c:	0b c0       	rjmp	.+22     	; 0x144 <DIO_init+0xd8>
		{
			DDRD |= (1<<pinNumber);
 12e:	21 b3       	in	r18, 0x11	; 17
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_init+0xce>
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_init+0xca>
 13e:	82 2b       	or	r24, r18
 140:	81 bb       	out	0x11, r24	; 17
 142:	08 95       	ret
		}
		else if(direction == IN)
 144:	41 30       	cpi	r20, 0x01	; 1
 146:	59 f4       	brne	.+22     	; 0x15e <DIO_init+0xf2>
		{
			DDRD &= ~(1<<pinNumber);
 148:	21 b3       	in	r18, 0x11	; 17
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	02 c0       	rjmp	.+4      	; 0x154 <DIO_init+0xe8>
 150:	88 0f       	add	r24, r24
 152:	99 1f       	adc	r25, r25
 154:	6a 95       	dec	r22
 156:	e2 f7       	brpl	.-8      	; 0x150 <DIO_init+0xe4>
 158:	80 95       	com	r24
 15a:	82 23       	and	r24, r18
 15c:	81 bb       	out	0x11, r24	; 17
 15e:	08 95       	ret

00000160 <DIO_write>:
		break;
	}
}
void DIO_write(uint8_t portNumber,uint8_t pinNumber,uint8_t value)//write data to dio
{
	switch(portNumber)
 160:	82 34       	cpi	r24, 0x42	; 66
 162:	29 f1       	breq	.+74     	; 0x1ae <DIO_write+0x4e>
 164:	18 f4       	brcc	.+6      	; 0x16c <DIO_write+0xc>
 166:	81 34       	cpi	r24, 0x41	; 65
 168:	39 f0       	breq	.+14     	; 0x178 <DIO_write+0x18>
 16a:	08 95       	ret
 16c:	83 34       	cpi	r24, 0x43	; 67
 16e:	d1 f1       	breq	.+116    	; 0x1e4 <DIO_write+0x84>
 170:	84 34       	cpi	r24, 0x44	; 68
 172:	09 f4       	brne	.+2      	; 0x176 <DIO_write+0x16>
 174:	52 c0       	rjmp	.+164    	; 0x21a <DIO_write+0xba>
 176:	08 95       	ret
	{
		//case of port A
		case PORT_A:
		if (value == HIGH)
 178:	41 30       	cpi	r20, 0x01	; 1
 17a:	59 f4       	brne	.+22     	; 0x192 <DIO_write+0x32>
		{
			PORTA |= (1<<pinNumber);
 17c:	2b b3       	in	r18, 0x1b	; 27
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	02 c0       	rjmp	.+4      	; 0x188 <DIO_write+0x28>
 184:	88 0f       	add	r24, r24
 186:	99 1f       	adc	r25, r25
 188:	6a 95       	dec	r22
 18a:	e2 f7       	brpl	.-8      	; 0x184 <DIO_write+0x24>
 18c:	82 2b       	or	r24, r18
 18e:	8b bb       	out	0x1b, r24	; 27
 190:	08 95       	ret
		}
		else if(value == LOW)
 192:	41 11       	cpse	r20, r1
 194:	5c c0       	rjmp	.+184    	; 0x24e <DIO_write+0xee>
		{
			PORTA &= ~(1<<pinNumber);
 196:	2b b3       	in	r18, 0x1b	; 27
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <DIO_write+0x42>
 19e:	88 0f       	add	r24, r24
 1a0:	99 1f       	adc	r25, r25
 1a2:	6a 95       	dec	r22
 1a4:	e2 f7       	brpl	.-8      	; 0x19e <DIO_write+0x3e>
 1a6:	80 95       	com	r24
 1a8:	82 23       	and	r24, r18
 1aa:	8b bb       	out	0x1b, r24	; 27
 1ac:	08 95       	ret
		}
		break;
		
		//case of port B
		case PORT_B:
		if (value == HIGH)
 1ae:	41 30       	cpi	r20, 0x01	; 1
 1b0:	59 f4       	brne	.+22     	; 0x1c8 <DIO_write+0x68>
		{
			PORTB |= (1<<pinNumber);
 1b2:	28 b3       	in	r18, 0x18	; 24
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	02 c0       	rjmp	.+4      	; 0x1be <DIO_write+0x5e>
 1ba:	88 0f       	add	r24, r24
 1bc:	99 1f       	adc	r25, r25
 1be:	6a 95       	dec	r22
 1c0:	e2 f7       	brpl	.-8      	; 0x1ba <DIO_write+0x5a>
 1c2:	82 2b       	or	r24, r18
 1c4:	88 bb       	out	0x18, r24	; 24
 1c6:	08 95       	ret
		}
		else if(value == LOW)
 1c8:	41 11       	cpse	r20, r1
 1ca:	41 c0       	rjmp	.+130    	; 0x24e <DIO_write+0xee>
		{
			PORTB &= ~(1<<pinNumber);
 1cc:	28 b3       	in	r18, 0x18	; 24
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <DIO_write+0x78>
 1d4:	88 0f       	add	r24, r24
 1d6:	99 1f       	adc	r25, r25
 1d8:	6a 95       	dec	r22
 1da:	e2 f7       	brpl	.-8      	; 0x1d4 <DIO_write+0x74>
 1dc:	80 95       	com	r24
 1de:	82 23       	and	r24, r18
 1e0:	88 bb       	out	0x18, r24	; 24
 1e2:	08 95       	ret
		}
		break;
		
		//case of port C
		case PORT_C:
		if (value == HIGH)
 1e4:	41 30       	cpi	r20, 0x01	; 1
 1e6:	59 f4       	brne	.+22     	; 0x1fe <DIO_write+0x9e>
		{
			PORTC |= (1<<pinNumber);
 1e8:	25 b3       	in	r18, 0x15	; 21
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <DIO_write+0x94>
 1f0:	88 0f       	add	r24, r24
 1f2:	99 1f       	adc	r25, r25
 1f4:	6a 95       	dec	r22
 1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <DIO_write+0x90>
 1f8:	82 2b       	or	r24, r18
 1fa:	85 bb       	out	0x15, r24	; 21
 1fc:	08 95       	ret
		}
		else if(value == LOW)
 1fe:	41 11       	cpse	r20, r1
 200:	26 c0       	rjmp	.+76     	; 0x24e <DIO_write+0xee>
		{
			PORTC &= ~(1<<pinNumber);
 202:	25 b3       	in	r18, 0x15	; 21
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	02 c0       	rjmp	.+4      	; 0x20e <DIO_write+0xae>
 20a:	88 0f       	add	r24, r24
 20c:	99 1f       	adc	r25, r25
 20e:	6a 95       	dec	r22
 210:	e2 f7       	brpl	.-8      	; 0x20a <DIO_write+0xaa>
 212:	80 95       	com	r24
 214:	82 23       	and	r24, r18
 216:	85 bb       	out	0x15, r24	; 21
 218:	08 95       	ret
		}
		break;
		
		//case of port D
		case PORT_D:
		if (value == HIGH)
 21a:	41 30       	cpi	r20, 0x01	; 1
 21c:	59 f4       	brne	.+22     	; 0x234 <DIO_write+0xd4>
		{
			PORTD |= (1<<pinNumber);
 21e:	22 b3       	in	r18, 0x12	; 18
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	02 c0       	rjmp	.+4      	; 0x22a <DIO_write+0xca>
 226:	88 0f       	add	r24, r24
 228:	99 1f       	adc	r25, r25
 22a:	6a 95       	dec	r22
 22c:	e2 f7       	brpl	.-8      	; 0x226 <DIO_write+0xc6>
 22e:	82 2b       	or	r24, r18
 230:	82 bb       	out	0x12, r24	; 18
 232:	08 95       	ret
		}
		else if(value == LOW)
 234:	41 11       	cpse	r20, r1
 236:	0b c0       	rjmp	.+22     	; 0x24e <DIO_write+0xee>
		{
			PORTD &= ~(1<<pinNumber);
 238:	22 b3       	in	r18, 0x12	; 18
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	02 c0       	rjmp	.+4      	; 0x244 <DIO_write+0xe4>
 240:	88 0f       	add	r24, r24
 242:	99 1f       	adc	r25, r25
 244:	6a 95       	dec	r22
 246:	e2 f7       	brpl	.-8      	; 0x240 <DIO_write+0xe0>
 248:	80 95       	com	r24
 24a:	82 23       	and	r24, r18
 24c:	82 bb       	out	0x12, r24	; 18
 24e:	08 95       	ret

00000250 <main>:

#include "DIO_Driver/DIO.h"

int main(void)
{
    DIO_init(PORT_A,0,OUT);
 250:	40 e0       	ldi	r20, 0x00	; 0
 252:	60 e0       	ldi	r22, 0x00	; 0
 254:	81 e4       	ldi	r24, 0x41	; 65
 256:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_init>
    while (1) 
    {
        DIO_write(PORT_A,0,HIGH);
 25a:	41 e0       	ldi	r20, 0x01	; 1
 25c:	60 e0       	ldi	r22, 0x00	; 0
 25e:	81 e4       	ldi	r24, 0x41	; 65
 260:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_write>
 264:	fa cf       	rjmp	.-12     	; 0x25a <main+0xa>

00000266 <_exit>:
 266:	f8 94       	cli

00000268 <__stop_program>:
 268:	ff cf       	rjmp	.-2      	; 0x268 <__stop_program>
