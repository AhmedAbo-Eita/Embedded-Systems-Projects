
First_Porject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001ee  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000242  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000242  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000274  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  000002b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000833  00000000  00000000  00000338  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000622  00000000  00000000  00000b6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000415  00000000  00000000  0000118d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000bc  00000000  00000000  000015a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000364  00000000  00000000  00001660  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000314  00000000  00000000  000019c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00001cd8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 3d 00 	call	0x7a	; 0x7a <main>
  64:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <LED_init>:
	DIO_write( portNumber, pinNumber,HIGH);
}

void LED_OFF(uint8_t portNumber, uint8_t pinNumber) //LED ON
{
	DIO_write( portNumber, pinNumber,LOW);
  6c:	41 e0       	ldi	r20, 0x01	; 1
  6e:	0e 94 46 00 	call	0x8c	; 0x8c <DIO_init>
  72:	08 95       	ret

00000074 <LED_toggle>:
}

void LED_toggle(uint8_t portNumber, uint8_t pinNumber) //LED ON
{
	DIO_toggle( portNumber, pinNumber);
  74:	0e 94 be 00 	call	0x17c	; 0x17c <DIO_toggle>
  78:	08 95       	ret

0000007a <main>:
#include "MCAL/DIO_Driver/dio.h"
#include "ECUAL/LED_Driver/led.h"

int main(void)
{
    LED_init(PORT_C,0);
  7a:	60 e0       	ldi	r22, 0x00	; 0
  7c:	83 e4       	ldi	r24, 0x43	; 67
  7e:	0e 94 36 00 	call	0x6c	; 0x6c <LED_init>
    while (1) 
    {
        LED_toggle(PORT_C,0);
  82:	60 e0       	ldi	r22, 0x00	; 0
  84:	83 e4       	ldi	r24, 0x43	; 67
  86:	0e 94 3a 00 	call	0x74	; 0x74 <LED_toggle>
  8a:	fb cf       	rjmp	.-10     	; 0x82 <main+0x8>

0000008c <DIO_init>:
		{
			PORTD |= (1<<pinNumber);
		}
		else if(value == LOW)
		{
			PORTD &= ~(1<<pinNumber);
  8c:	82 34       	cpi	r24, 0x42	; 66
  8e:	29 f1       	breq	.+74     	; 0xda <DIO_init+0x4e>
  90:	18 f4       	brcc	.+6      	; 0x98 <DIO_init+0xc>
  92:	81 34       	cpi	r24, 0x41	; 65
  94:	39 f0       	breq	.+14     	; 0xa4 <DIO_init+0x18>
  96:	08 95       	ret
  98:	83 34       	cpi	r24, 0x43	; 67
  9a:	d1 f1       	breq	.+116    	; 0x110 <DIO_init+0x84>
  9c:	84 34       	cpi	r24, 0x44	; 68
  9e:	09 f4       	brne	.+2      	; 0xa2 <DIO_init+0x16>
  a0:	52 c0       	rjmp	.+164    	; 0x146 <DIO_init+0xba>
  a2:	08 95       	ret
  a4:	41 30       	cpi	r20, 0x01	; 1
  a6:	59 f4       	brne	.+22     	; 0xbe <DIO_init+0x32>
  a8:	2a b3       	in	r18, 0x1a	; 26
  aa:	81 e0       	ldi	r24, 0x01	; 1
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <DIO_init+0x28>
  b0:	88 0f       	add	r24, r24
  b2:	99 1f       	adc	r25, r25
  b4:	6a 95       	dec	r22
  b6:	e2 f7       	brpl	.-8      	; 0xb0 <DIO_init+0x24>
  b8:	82 2b       	or	r24, r18
  ba:	8a bb       	out	0x1a, r24	; 26
  bc:	08 95       	ret
  be:	41 11       	cpse	r20, r1
  c0:	5c c0       	rjmp	.+184    	; 0x17a <DIO_init+0xee>
  c2:	2a b3       	in	r18, 0x1a	; 26
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	02 c0       	rjmp	.+4      	; 0xce <DIO_init+0x42>
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	6a 95       	dec	r22
  d0:	e2 f7       	brpl	.-8      	; 0xca <DIO_init+0x3e>
  d2:	80 95       	com	r24
  d4:	82 23       	and	r24, r18
  d6:	8a bb       	out	0x1a, r24	; 26
  d8:	08 95       	ret
  da:	41 30       	cpi	r20, 0x01	; 1
  dc:	59 f4       	brne	.+22     	; 0xf4 <DIO_init+0x68>
  de:	27 b3       	in	r18, 0x17	; 23
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_init+0x5e>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_init+0x5a>
  ee:	82 2b       	or	r24, r18
  f0:	87 bb       	out	0x17, r24	; 23
  f2:	08 95       	ret
  f4:	41 11       	cpse	r20, r1
  f6:	41 c0       	rjmp	.+130    	; 0x17a <DIO_init+0xee>
  f8:	27 b3       	in	r18, 0x17	; 23
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	02 c0       	rjmp	.+4      	; 0x104 <DIO_init+0x78>
 100:	88 0f       	add	r24, r24
 102:	99 1f       	adc	r25, r25
 104:	6a 95       	dec	r22
 106:	e2 f7       	brpl	.-8      	; 0x100 <DIO_init+0x74>
 108:	80 95       	com	r24
 10a:	82 23       	and	r24, r18
 10c:	87 bb       	out	0x17, r24	; 23
 10e:	08 95       	ret
 110:	41 30       	cpi	r20, 0x01	; 1
 112:	59 f4       	brne	.+22     	; 0x12a <DIO_init+0x9e>
 114:	24 b3       	in	r18, 0x14	; 20
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	02 c0       	rjmp	.+4      	; 0x120 <DIO_init+0x94>
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	6a 95       	dec	r22
 122:	e2 f7       	brpl	.-8      	; 0x11c <DIO_init+0x90>
 124:	82 2b       	or	r24, r18
 126:	84 bb       	out	0x14, r24	; 20
 128:	08 95       	ret
 12a:	41 11       	cpse	r20, r1
 12c:	26 c0       	rjmp	.+76     	; 0x17a <DIO_init+0xee>
 12e:	24 b3       	in	r18, 0x14	; 20
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_init+0xae>
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_init+0xaa>
 13e:	80 95       	com	r24
 140:	82 23       	and	r24, r18
 142:	84 bb       	out	0x14, r24	; 20
 144:	08 95       	ret
 146:	41 30       	cpi	r20, 0x01	; 1
 148:	59 f4       	brne	.+22     	; 0x160 <DIO_init+0xd4>
 14a:	21 b3       	in	r18, 0x11	; 17
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	02 c0       	rjmp	.+4      	; 0x156 <DIO_init+0xca>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	6a 95       	dec	r22
 158:	e2 f7       	brpl	.-8      	; 0x152 <DIO_init+0xc6>
 15a:	82 2b       	or	r24, r18
 15c:	81 bb       	out	0x11, r24	; 17
 15e:	08 95       	ret
 160:	41 11       	cpse	r20, r1
 162:	0b c0       	rjmp	.+22     	; 0x17a <DIO_init+0xee>
 164:	21 b3       	in	r18, 0x11	; 17
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	02 c0       	rjmp	.+4      	; 0x170 <DIO_init+0xe4>
 16c:	88 0f       	add	r24, r24
 16e:	99 1f       	adc	r25, r25
 170:	6a 95       	dec	r22
 172:	e2 f7       	brpl	.-8      	; 0x16c <DIO_init+0xe0>
 174:	80 95       	com	r24
 176:	82 23       	and	r24, r18
 178:	81 bb       	out	0x11, r24	; 17
 17a:	08 95       	ret

0000017c <DIO_toggle>:
		break;
	}
}
void DIO_toggle(uint8_t portNumber,uint8_t pinNumber)// toggle dio
{
	switch(portNumber)
 17c:	82 34       	cpi	r24, 0x42	; 66
 17e:	a1 f0       	breq	.+40     	; 0x1a8 <DIO_toggle+0x2c>
 180:	18 f4       	brcc	.+6      	; 0x188 <DIO_toggle+0xc>
 182:	81 34       	cpi	r24, 0x41	; 65
 184:	31 f0       	breq	.+12     	; 0x192 <DIO_toggle+0x16>
 186:	08 95       	ret
 188:	83 34       	cpi	r24, 0x43	; 67
 18a:	c9 f0       	breq	.+50     	; 0x1be <DIO_toggle+0x42>
 18c:	84 34       	cpi	r24, 0x44	; 68
 18e:	11 f1       	breq	.+68     	; 0x1d4 <DIO_toggle+0x58>
 190:	08 95       	ret
	{
		//for port A
		case(PORT_A):
		PORTA ^= (1<<pinNumber);
 192:	2b b3       	in	r18, 0x1b	; 27
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	02 c0       	rjmp	.+4      	; 0x19e <DIO_toggle+0x22>
 19a:	88 0f       	add	r24, r24
 19c:	99 1f       	adc	r25, r25
 19e:	6a 95       	dec	r22
 1a0:	e2 f7       	brpl	.-8      	; 0x19a <DIO_toggle+0x1e>
 1a2:	82 27       	eor	r24, r18
 1a4:	8b bb       	out	0x1b, r24	; 27
		break;
 1a6:	08 95       	ret
		//for port B
		case(PORT_B):
		PORTB ^= (1<<pinNumber);
 1a8:	28 b3       	in	r18, 0x18	; 24
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <DIO_toggle+0x38>
 1b0:	88 0f       	add	r24, r24
 1b2:	99 1f       	adc	r25, r25
 1b4:	6a 95       	dec	r22
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <DIO_toggle+0x34>
 1b8:	82 27       	eor	r24, r18
 1ba:	88 bb       	out	0x18, r24	; 24
		break;
 1bc:	08 95       	ret
		//for port C
		case(PORT_C):
		PORTC ^= (1<<pinNumber);
 1be:	25 b3       	in	r18, 0x15	; 21
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	02 c0       	rjmp	.+4      	; 0x1ca <DIO_toggle+0x4e>
 1c6:	88 0f       	add	r24, r24
 1c8:	99 1f       	adc	r25, r25
 1ca:	6a 95       	dec	r22
 1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <DIO_toggle+0x4a>
 1ce:	82 27       	eor	r24, r18
 1d0:	85 bb       	out	0x15, r24	; 21
		break;
 1d2:	08 95       	ret
		//for port D
		case(PORT_D):
		PORTD ^= (1<<pinNumber);
 1d4:	22 b3       	in	r18, 0x12	; 18
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <DIO_toggle+0x64>
 1dc:	88 0f       	add	r24, r24
 1de:	99 1f       	adc	r25, r25
 1e0:	6a 95       	dec	r22
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <DIO_toggle+0x60>
 1e4:	82 27       	eor	r24, r18
 1e6:	82 bb       	out	0x12, r24	; 18
 1e8:	08 95       	ret

000001ea <_exit>:
 1ea:	f8 94       	cli

000001ec <__stop_program>:
 1ec:	ff cf       	rjmp	.-2      	; 0x1ec <__stop_program>
